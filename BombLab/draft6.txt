<phase_6>:
	push r14;
	push r13;
	push r12;
	push rbp;
	push rbx;
	rsp = rsp - 80;
	
	r13 = rsp;									
	rsi = rsp;
	read_six_numbers(rdi, rsi);
	r14 = rsp;
	r12d = 0;
<phase_6+32>:
	rbp = r13;
	eax = *(r13);
	eax = eax - 1;
	if (eax > (signed)5)
		bomb;
	r12d = r12d + 1;
	if (r12d == 6)
		jmp <phase_6+95>
	ebx = r12d;
<phase_6+65>:
	rax = movslq(ebx);
	eax = *(rsp + 4 * rax)
	if *(rbp) == eax
		bomb;
	ebx = ebx + 1;
	if ebx <= 5
		jmp <phase_6+65>
	r13 = r13 + 4;
	jmp <phase_6+32>
	

<phase_6+95>:
	rsi = rsp+24;
	rax = r14;
	ecx = 7;
<phase_6+108>:
	edx = ecx;
	edx = edx - *rax;
	*rax = edx;
	rax = rax + 4;
	if rax != rsi
		jmp <phase_6+108>


	esi = 0;
	jmp <phase_6+163>
<phase_6+130>:
	rdx = *(rdx+8);
	eax = eax + 1;
	if (eax != ecx)
		jmp <phase_6+130>;
	jmp <phase_6+148>
<phase_6+143>:
	edx = 0x6032d0;
<phase_6+148>:
	*(rsp+rsi*2+32) = rdx;
	rsi = rsi + 4;
	if rsi == 24
		jmp <phase_6+183>;
<phase_6+163>:
	ecx = *(rsp+rsi);
	if ecx <= (signed)1
		jmp <phase_6+143>;
	eax = 1;
	edx = 0x6032d0;
	jmp <phase_6+130>;


<phase_6+183>:
	rbx = *(rsp+32)
	rax = rsp + 40
	rsi = rsp + 80
	rcx = rbx
<phase_6+201>:
	rdx = *rax
	*(rcx+8) = rdx;
	rax = rax + 8
	if rax == rsi
		jmp <phase_6+222>
	rcx = rdx
	jmp <phase_6+201>


<phase_6+222>:
	*(rdx+8) = 0
	ebp = 5

<phase_6+235>:
	rax = *(rbx+8)				
	eax = *rax
	if *rbx < eax
		bomb
	rbx = *(rbx + 8)			ebp = 1
	ebp = ebp - 1;				ebp = 0
	jne <phase_6+235> 			// if (ebp!=0) jmp <==> if (ebp == 0) pass;
	
	rsp = rsp + 80 
	

235以后：
	
困惑：
	1. com指令，对于有符号比较和无符号比较，由于数字都是补码表示，
		所以有符号可以直接比较真实数值，
		但无符号比较，可能负数>正数，所以比二进制码